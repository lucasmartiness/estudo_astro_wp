---
import type { GetStaticPaths } from "astro";
import Layout from '../layouts/Layout.astro' 

import {Image} from 'astro:assets'



const {slug} = Astro.params;


async function  get_post( slug ){

    try{
        let res = await fetch(`https://33giga.com.br/wp-json/wp/v2/posts?slug=${slug}&_embed`)
        let [data] = await res.json();

        return await  data;
    }catch( e ){ 
        return "";
    }
}
async function  get_galeria( slug ){

    try{

        let res = await fetch(`https://33giga.com.br/wp-json/gallery_plugin/v1/post/${slug}`)
        let data = await res.json();
        
        return  await data;
    }catch( e ){

        return "";
    }
}

let post = await get_post(slug)
let galeria =  await get_galeria( slug )
 

console.log(     galeria[0]  )
// gerar toda estrutura de uris wordpress PARA MODO ESTÁTICO
// para modo dinâmico não preciso dele mas não custa nada ter ele aqui
// export async function getStaticPaths (){

//     let res = await fetch("https://33giga.com.br//wp-json/wp/v2/posts")
//     let posts = await res.json();

//     return posts.map( p => ({
//         params: { slug: p.slug },
//         props: { post: p },
//     }))

// }  
 
---

<style is:global>
    .owl-carousel{ display: none;}
</style>
<Layout title="Welcome to Astro.">
    <div>
        <a href="/">home</a>
    </div>
    
	<main class="bebas">
            <p>{ post.id }</p>
        <!-- loading="lazy" -->
            { ( post._embedded['wp:featuredmedia'] ) && 
             <Image 
                alt={post.title.rendered} 
                
                densities={[1.5, 2]} 
                src={post._embedded['wp:featuredmedia']['0'].media_details.sizes.medium.source_url} 
                width={post._embedded['wp:featuredmedia']['0'].media_details.sizes.medium.width}
                height={post._embedded['wp:featuredmedia']['0'].media_details.sizes.medium.height}
                />   
            }
           
		    <h2> {post.title.rendered} </h2>
            <Fragment set:html={post.content.rendered} />
             
           
            <br><br>

            {galeria && (  
                <h3>Galeria por api </h3>
            )}
            { galeria && galeria.map( e => ( <Image alt="thumbnails" src={e} width={300} height={300} />  <br>) ) }
            



        </main>
</Layout>

